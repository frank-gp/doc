{
  // https://frankgp.com/app/snippet/
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "fgpMediaQuery": {
    "scope": "css",
    "prefix": "fgpMediaQuery",
    "body": [
      "/* === Desktop... === */\n@media (min-width: 40rem) {\n  body {\n    background-color: peru;\n  }\n}\n/* === Desktop... === */\n\n/* === Mobile... === */\n@media (max-width: 40rem) {\n  body {\n    background-color: crimson;\n  }\n}\n/* === Mobile... === */"
    ],
    "description": "fgpMediaQuery"
  },
  "fgpArrowFunction": {
    "scope": "javascript",
    "prefix": "fgpArrowFunction",
    "body": [
      "let ${1:arrowFunc} = () => {",
      " console.log('test ${1:arrowFunc}')",
      "}",
      ""
    ],
    "description": "fgpArrowFunction"
  },
  "fgpConsole": {
    "scope": "javascript",
    "prefix": "fgpConsole",
    "body": [
      "import 'https://frankgp.com/lib/console.js';\n\nconsole.log('TEST');"
    ],
    "description": "fgpConsole"
  },
  "fgpFunction1": {
    "scope": "javascript",
    "prefix": "fgpFunction1",
    "body": [
      "function ${1:func1}(){",
      "   ${2:console.log('TEST ${1:func1}')}",
      "}",
      "${1:func1}()",
      ""
    ],
    "description": "fgpFunction1"
  },
  "fgpArray": {
    "scope": "javascript",
    "prefix": "fgpArray",
    "body": [
      "let ${1:array} = document.querySelectorAll('${2:array}');",
      "",
      "${1:array}.forEach((element) => {",
      "  element.onclick = function () {",
      "   console.log(element);",
      "  };",
      "});"
    ],
    "description": "fgpArray"
  },
  "fgpWebComponent": {
    "scope": "javascript",
    "prefix": "fgpWebComponent",
    "body": [
      "let html = `<p>web component</p>`",
      "let css = `<style>:host{color: tomato;}</style>`",
      "",
      "class ${1:WebComponent} extends HTMLElement {",
      "constructor() {",
      "super();",
      "const shadow = this.attachShadow({ mode: 'open' });",
      "shadow.innerHTML = html + css",
      "}",
      "}",
      "customElements.define('${2:web-component}', ${1:WebComponent});",
    ],
    "description": "fgpWebComponent"
  },
  "fgpIcomoon": {
    "scope": "html, css, javascript",
    "prefix": "fgpIcomoon",
    "body": [
      "https://frank-gp.github.io/icon/icomoon/style.css"
    ],
    "description": "fgpIcomoon"
  },
  "fgpDev": {
    "scope": "html",
    "prefix": "fgpDev",
    "body": [
      "<!DOCTYPE html>\n<html lang='en'>\n  <head>\n    <meta charset='UTF-8' />\n    <meta name='viewport' content='width=device-width, initial-scale=1.0' />\n    <script src=\"https://frankgp.com/component/layout.js\" type=\"module\"></script>\n    <title>Frank GP — Developer</title>\n  </head>\n\n  <body>\n    <style>\n\n    </style>\n\n    \n\n    <script>\n\n    </script>\n  </body>\n</html>"
    ],
    "description": "fgpDev"
  },
  "favicon": {
    "scope": "html",
    "prefix": "favicon",
    "body": [
      "<link rel='icon' href='${1:https://fgp.one/img/favicon.webp}' sizes='${2:256x256}' />"
    ],
    "description": "favicon"
  },
  "fgpDeployBasic": {
    "scope": "html",
    "prefix": "fgpDeployBasic",
    "body": [
      "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://frankgp.com/component/stat.js\" type=\"module\"></script>\n    <script src=\"https://frankgp.com/component/layout.js\" type=\"module\"></script>\n    <script src=\"https://frankgp.com/component/loader.js\"></script>\n    <title>Frank GP | Developer</title>\n  </head>\n  <body>\n    ${1:<main>\n      <h2>Frank GP | Developer</h2>\n    </main>}\n  </body>\n</html>"
    ],
    "description": "fgpDeployBasic"
  },
  "fgpDeploy": {
    "scope": "html",
    "prefix": "fgpDeploy",
    "body": [
      "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link rel=\"icon\" href=\"https://fgp.one/favicon.webp\" sizes=\"256x256\" />\n    <meta name=\"theme-color\" content=\"#347\" />\n    <meta name=\"author\" content=\"Frank GP\" />\n    <meta name=\"site_locale\" content=\"en_PE\" />\n\n    <!-- CSS -->\n    <link rel=\"stylesheet\" href=\"https://frankgp.com/icon/icomoon/style.css\" />\n    <link rel=\"stylesheet\" href=\"https://frankgp.com/component/global.css\" />\n\n    <!-- component -->\n    <script src=\"https://frankgp.com/component/header.js\" type=\"module\"></script>\n    <script src=\"https://frankgp.com/component/footer.js\" type=\"module\"></script>\n    <script src=\"https://frankgp.com/component/stat.js\" type=\"module\"></script>\n    <!-- <script src=\"https://frankgp.com/component/social.js\" defer></script> -->\n    <!-- <script src=\"https://frankgp.com/component/contact.js\" defer></script> -->\n\n    <!-- lib -->\n    <!-- <script src=\"https://frankgp.com/lib/js/clipboard.js\" defer></script> -->\n    <!-- <script src=\"https://frankgp.com/lib/js/highlight.js\"></script> -->\n    <!-- <script src=\"https://frankgp.com/lib/js/youtube-embed.js\"></script> -->\n\n    <!-- SEO -->\n    <title>Frank GP — Android Developer</title>\n    <meta name=\"robots\" content=\"index\" />\n    <meta name=\"description\" content=\"Research, design and development\" />\n\n    <!-- Open Graph tags -->\n    <meta property=\"og:title\" content=\"Frank GP — Android Developer\" />\n    <meta property=\"og:description\" content=\"Research, design and development\" />\n    <meta property=\"og:type\" content=\"website\" />\n    <meta property=\"og:url\" content=\"https://frankgp.com\" />\n    <meta property=\"og:image\" content=\"https://fgp.one/fb-cover.webp\" />\n    <meta property=\"og:image:width\" content=\"600\" />\n    <meta property=\"og:image:height\" content=\"314\" />\n    <meta property=\"fb:app_id\" content=\"1526445401046904\" />\n  </head>\n\n  <body>\n    <script src=\"https://frankgp.com/component/loader.js\"></script>\n\n    <main>\n      <h2>main</h2>\n      <img src=\"https://source.unsplash.com/1080x1080\" alt=\"\" />\n    </main>\n  </body>\n</html>"
    ],
    "description": "fgpDeploy"
  },
  "fgpExpress0": {
    "scope": "javascript",
    "prefix": "fgpExpress0",
    "body": [
      "const express = require('express');\n\nconst app = express();\n\napp.get('/', (req, res) => {\n  console.log(req.headers);\n  res.send('Hello, World!');\n});\n\napp.listen(3000, console.log('starting'));"
    ],
    "description": "fgpExpress0"
  }
  "fgpExpress1": {
    "scope": "javascript",
    "prefix": "fgpExpress1",
    "body": [
      "import express from 'express';\n\nconst app = express();\n\napp.get('/', (req,res)=> res.send('hello express'))\n\napp.listen(3000);\n\nconsole.log('http://localhost:3000/');"
    ],
    "description": "fgpExpress1"
  },
  "fgpExpress2": {
    "scope": "javascript",
    "prefix": "fgpExpress2",
    "body": [
      "import express from 'express';\nimport cors from 'cors';\n\nconst app = express();\n\napp.use(express.json());\napp.use(cors());\n\napp.get('/', (req, res) => {\n  console.log('request');\n  res.json({ message: 'hello' });\n});\n\napp.listen(3000);\nconsole.log('http://localhost:3000');"
    ],
    "description": "fgpExpress2"
  },
  "fgpShortenerNodejs0": {
    "scope": "javascript",
    "prefix": "fgpShortenerNodejs0",
    "body": [
      "const express = require('express');\nconst app = express();\n\nconst data = [\n  {\n    url: 'google',\n    redirect: 'https://google.com/',\n    visits: 0,\n  },\n  {\n    url: 'example',\n    redirect: 'https://example.com/',\n    visits: 0,\n  },\n];\n\napp.get('/', (req, res) => {\n  res.json(data);\n});\n\napp.get('/:url', (req, res) => {\n  const requestedUrl = req.params.url;\n  const redirectEntry = data.find((entry) => entry.url === requestedUrl);\n\n  if (redirectEntry) {\n    redirectEntry.visits++;\n    res.redirect(redirectEntry.redirect);\n  } else {\n    res.status(404).json(data);\n  }\n});\n\napp.listen(3000, () => {\n    console.log(`Server is running http://localhost:3000/`);\n  });"
    ],
    "description": "fgpShortenerNodejs0"
  },
  "fgpShortenerNodejs1": {
    "scope": "javascript",
    "prefix": "fgpShortenerNodejs1",
    "body": [
      "const express = require('express');\nconst app = express();\n\nconst data = [\n  {\n    url: 'google',\n    redirect: 'https://google.com/',\n    visits: 0,\n  },\n  {\n    url: 'example',\n    redirect: 'https://example.com/',\n    visits: 0,\n  },\n];\n\napp.get('/', (req, res) => {\n  // Add the current protocol and host to each URL\n  const updatedData = data.map((entry) => ({\n    ...entry,\n    fullUrl: req.protocol + '://' + req.headers.host + '/' + entry.url,\n  }));\n\n  res.json(updatedData);\n});\n\napp.get('/:url', (req, res) => {\n  const requestedUrl = req.params.url;\n  const redirectEntry = data.find((entry) => entry.url === requestedUrl);\n\n  if (redirectEntry) {\n    redirectEntry.visits++;\n    res.redirect(redirectEntry.redirect);\n  } else {\n    res.status(404).json(data);\n  }\n});\n\napp.listen(3000, () => {\n  console.log(`Server is running http://localhost:3000/`);\n});"
    ],
    "description": "fgpShortenerNodejs1"
  },
  "fgpExpressINFO": {
    "scope": "javascript",
    "prefix": "fgpExpressINFO",
    "body": [
      "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.get('/', (req, res) => {\n  // Get the versions of Node.js and npm\n  const nodeVersion = process.version;\n  const npmVersion = require('child_process').execSync('npm -v').toString().trim();\n  const expressVersion = require('express/package').version;\n  const environment = process.env.NODE_ENV || 'development';\n  const osInfo = require('os').platform(); // Operating system information\n\n  // Create a response object\n  const response = {\n    node: nodeVersion,\n    npm: npmVersion,\n    express: expressVersion,\n    environment: environment,\n    os: osInfo,\n    // Add more information as needed\n  };\n\n  // Send the response as JSON\n  res.json(response);\n});\n\napp.listen(port, () => {\n  console.log(`Server listening at http://localhost:${port}`);\n});"
    ],
    "description": "fgpExpressINFO"
  },
  "fgpServerVanilla": {
    "scope": "javascript",
    "prefix": "fgpServerVanilla",
    "body": [
      "const http = require('http');\n\nconst server = http.createServer((req, res) => {\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\n  res.end('Hello, World!\\n');\n});\n\nconst PORT = 3000;\nconst IP_ADDRESS = '127.0.0.1';\n\nserver.listen(PORT, IP_ADDRESS, () => {\n  console.log(`Server running at http://\\${IP_ADDRESS}:\\${PORT}/`);\n});"
    ],
    "description": "fgpServerVanilla"
  },
  "fgpIllustrator": {
    "scope": "html",
    "prefix": "fgpIllustrator",
    "body": [
      "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <script src=\"https://frankgp.com/stats/send.js\" type=\"module\"></script>\n    <script src=\"https://enyeinnovation.github.io/illustrator/web.js\" defer></script>\n  </head>\n  <body></body>\n</html>"
    ],
    "description": "fgpIllustrator"
  },
  "fgp404": {
    "scope": "html",
    "prefix": "fgp404",
    "body": [
      "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link rel=\"preload\" as=\"image\" id=\"loaderImg\" href=\"/favicon.ico\" />\n    <script src=\"https://frankgp.com/component/stat.js\"></script>\n    <title>404 Not Found</title>\n    <script>\n      var data = {\n        example: \"https://example.com/\",\n        whatsapp: \"http://wa.me/51993812588?text=Hola,%20Fou%20De%20Toi\",\n      };\n    </script>\n    <script src=\"https://frankgp.com/component/404.js\" type=\"module\"></script>\n    <script src=\"https://frankgp.com/component/loader.js\"></script>\n    <script src=\"https://frankgp.com/component/layout.js\" type=\"module\"></script>\n  </head>\n  <body>\n    <main></main>\n  </body>\n</html>"
    ],
    "description": "fgp404"
  },
  "fgpLayout": {
    "scope": "html",
    "prefix": "fgpLayout",
    "body": [
      "<script src=\"https://frankgp.com/component/layout.js\" type=\"module\"></script>"
    ],
    "description": "fgpLayout"
  },
  "fgpHead": {
    "scope": "html",
    "prefix": "fgpHead",
    "body": [
      "<!-- CSS -->\n    <link rel=\"stylesheet\" href=\"https://frankgp.com/icon/icomoon/style.css\" />\n    <link rel=\"stylesheet\" href=\"https://frankgp.com/component/global.css\" />\n\n    <!-- component -->\n    <script src=\"https://frankgp.com/component/stat.js\" type=\"module\"></script>\n    <script src=\"https://frankgp.com/component/layout.js\" type=\"module\"></script>\n    <!--  body  -->\n    <script src=\"https://frankgp.com/component/loader.js\"></script>"
    ],
    "description": "fgpHead"
  },
  "fgpStat": {
    "scope": "html",
    "prefix": "fgpStat",
    "body": [
      "<script src=\"https://frankgp.com/component/stat.js\" type=\"module\"></script>"
    ],
    "description": "fgpStat"
  },
  "fgpLoader": {
    "scope": "html",
    "prefix": "fgpLoader",
    "body": [
      "<script src=\"https://frankgp.com/component/loader.js\"></script>"
    ],
    "description": "fgpLoader"
  },
  "fgpImg": {
    "scope": "html, css, javascript",
    "prefix": "fgpImg",
    "body": [
      "<img src=\"https://source.unsplash.com/1080x1080\" alt=\"\" />"
    ],
    "description": "fgpImg"
  },
  "fgpImgUnsplash": {
    "scope": "html, css, javascript",
    "prefix": "fgpImgUnsplash",
    "body": [
      "https://source.unsplash.com/1080x1080"
    ],
    "description": "fgpImgUnsplash"
  },
  "fgpImport": {
    "scope": "javascript",
    "prefix": "fgpImport",
    "body": [
      "/* commonjs */\n        // import(\"https://frankgp.com/lib/console.js\");\n\n        /* <script type=\"module\"> */\n\n        import \"https://frankgp.com/lib/console.js\";\n        console.log(\"console.log\");"
    ],
    "description": "fgpImport"
  },
  "fgp_express_Static": {
    "scope": "javascript",
    "prefix": "fgp_express_Static",
    "body": [
      "const express = require(\"express\");\nconst app = express();\n\napp.use(express.static(\"public\"));\n\nconst PORT = process.env.PORT ?? 3000;\n\napp.listen(PORT, () => {\n  console.log(`Server listening on http://localhost:\\${PORT}`);\n});"
    ],
    "description": "fgp_express_Static"
  },
  "fgp_scripts": {
    "scope": "json",
    "prefix": "fgp_scripts",
    "body": [
      "\"start\": \"node app.js\",\n    \"dev\": \"node --watch --env-file=.env app.js\",\n    \"devcmd\": \"env.cmd && node --watch app.js\",\n    \"push\": \"git add . && git commit --amend --no-edit && git push --force\","
    ],
    "description": "fgp_scripts"
  },
  "fgp_query": {
    "scope": "sql",
    "prefix": "fgp_query",
    "body": [
      "DROP DATABASE my_database;\nCREATE DATABASE my_database;\nUSE my_database;\n\nSHOW DATABASES;\n\nDROP TABLE my_table;\n\nCREATE TABLE IF NOT EXISTS my_table (\n  id INT AUTO_INCREMENT PRIMARY KEY,\n  name VARCHAR(255),\n  email VARCHAR(255)\n);\n\n\nSHOW TABLES;\n\nSHOW COLUMNS FROM my_table;\n\nINSERT INTO my_table (name, email) VALUES\n  ('John Doe', 'john@example.com'),\n  ('Jane Doe', 'jane@example.com'),\n  ('Bob Smith', 'bob@example.com');\n\n\nSELECT * FROM my_table;\n\n\n/* \n\nconst db = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"\",\n  database: \"my_database\",\n});\n\n */\n\n-- mysql -u root\n-- system clear\n-- system cls"
    ],
    "description": "fgp_query"
  },
  "fgp_illustrator_docWrite": {
    "scope": "html",
    "prefix": "fgp_illustrator_docWrite",
    "body": [
      "<script src=\"https://enyeinnovation.github.io/illustrator/documentWrite.js\"></script>"
    ],
    "description": "fgp_illustrator_docWrite"
  },
  "fgpBootstrap5": {
    "scope": "html",
    "prefix": "fgpBootstrap5",
    "body": [
      "<link href=\"https://bit.ly/bootstrap533_css\" rel=\"stylesheet\" />\n    <script src=\"https://bit.ly/jquery3_js\"></script>\n    <script src=\"https://bit.ly/popper2118_js\"></script>\n    <script src=\"https://bit.ly/bootstrap533_js\"></script>"
    ],
    "description": "fgpBootstrap5"
  },
  "fgpPoster": {
    "scope": "html",
    "prefix": "fgpPoster",
    "body": [
      "<meta property=\"og:image\" content=\"https://i.postimg.cc/fbwLF9Ft/fb-cover-vscode-shortcode.webp\" />"
    ],
    "description": "fgpPoster"
  },
  "fgpPico.css": {
    "scope": "html",
    "prefix": "fgpPico.css",
    "body": [
      "<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css\">"
    ],
    "description": "fgpPico.css"
  },
  "fgp_express_crud_cors": {
    "scope": "javascript",
    "prefix": "fgp_express_crud_cors",
    "body": [
      "const express = require(\"express\");\nconst app = express();\nconst PORT = 3000;\n\n// Middleware to enable CORS\napp.use((req, res, next) => {\n  res.header(\"Access-Control-Allow-Origin\", \"*\"); // Allow requests from any origin\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});\n\n// Array to store data\nlet arrayData = [{ id: 1, name: \"John Demo\" }];\n\n// Middleware to parse JSON bodies\napp.use(express.json());\napp.use(express.static(\"public\"));\n``;\n\n// Create operation - POST\napp.post(\"/api\", (req, res) => {\n  const newData = req.body;\n  arrayData.push(newData);\n  res.json({ message: \"Data added successfully\", data: newData });\n});\n\n// Read operation - GET all data\napp.get(\"/api\", (req, res) => {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n\n  res.json(arrayData);\n});\n\n// Read operation - GET single data by id\napp.get(\"/api/:id\", (req, res) => {\n  const id = parseInt(req.params.id);\n  const data = arrayData.find((item) => item.id === id);\n  if (data) {\n    res.json(data);\n  } else {\n    res.status(404).json({ message: \"Data not found\" });\n  }\n});\n\n// Update operation - PUT\napp.put(\"/api/:id\", (req, res) => {\n  const id = parseInt(req.params.id);\n  const index = arrayData.findIndex((item) => item.id === id);\n  if (index !== -1) {\n    arrayData[index] = req.body;\n    res.json({ message: \"Data updated successfully\", data: arrayData[index] });\n  } else {\n    res.status(404).json({ message: \"Data not found\" });\n  }\n});\n\n// Delete operation - DELETE\napp.delete(\"/api/:id\", (req, res) => {\n  const id = parseInt(req.params.id);\n  const index = arrayData.findIndex((item) => item.id === id);\n  if (index !== -1) {\n    const deletedData = arrayData.splice(index, 1);\n    res.json({ message: \"Data deleted successfully\", data: deletedData });\n  } else {\n    res.status(404).json({ message: \"Data not found\" });\n  }\n});\n\n// Start the server\napp.listen(PORT, () => {\n  console.log(`Server express-crud.js is running on http://127.0.0.1:\\${PORT}`);\n});"
    ],
    "description": "fgp_express_crud_cors"
  },
  "fgp_PORT_random": {
    "scope": "javascript",
    "prefix": "fgp_PORT_random",
    "body": [
      "const http = require(\"http\");\n\n// Intenta escuchar en el puerto 3000\nconst server = http.createServer(app);\nserver.listen(3000, () => {\n  console.log(\"Servidor escuchando en el puerto 3000\");\n});\n\n// Manejar el evento de error si el puerto 3000 está ocupado\nserver.on(\"error\", (err) => {\n  if (err.code === \"EADDRINUSE\") {\n    // Puerto 3000 está ocupado, selecciona un puerto aleatorio disponible\n    server.listen(0, () => {\n      const port = server.address().port;\n      console.log(`El servidor está escuchando en el puerto \\${port}`);\n    });\n  } else {\n    // Otro tipo de error\n    console.error(\"Error al iniciar el servidor:\", err);\n  }\n});"
    ],
    "description": "fgp_PORT_random"
  },
  "fgp_highlight": {
    "scope": "html",
    "prefix": "fgp_highlight",
    "body": [
      "<script src=\"https://frankgp.com/lib/highlight.js\" type=\"module\"></script>"
    ],
    "description": "fgp_highlight"
  },
  "fgp_PORT_ramdom_basic": {
    "scope": "javascript",
    "prefix": "fgp_PORT_ramdom_basic",
    "body": [
      "const express = require(\"express\");\n\nconst app = express();\n\napp.get(\"/\", (req, res) => {\n  console.log(req.headers);\n  res.send(\"Hello, World!\");\n});\n\nconst server = app.listen(0, () => {\n  const port = server.address().port;\n  console.log(`Server in http://localhost:\\${port}`);\n});"
    ],
    "description": "fgp_PORT_ramdom_basic"
  },
  "fgp_PORT_3000+1": {
    "scope": "javascript",
    "prefix": "fgp_PORT_3000+1",
    "body": [
      "let PORT = 3000;\nconst server = app.listen(PORT, () => {\n  console.log(`Server is listening on http://localhost:\\${PORT}`);\n});\n\nserver.on('error', (err) => {\n  if (err.code === 'EADDRINUSE') {\n    console.log(`Port \\${PORT} is in use, trying the next one...`);\n    PORT++;\n    server.listen(PORT);\n  }\n});"
    ],
    "description": "fgp_PORT_3000+1"
  },
  "fgp_newDateID": {
    "scope": "javascript, typescript",
    "prefix": "fgp_newDateID",
    "body": [
      "const nowDate = new Date();\nconst formattedDate =\n  String(nowDate.getFullYear()).slice(-2) +\n  String(nowDate.getMonth() + 1).padStart(2, \"0\") +\n  String(nowDate.getDate()).padStart(2, \"0\") +\n  //   \"_\" +\n  String(nowDate.getHours()).padStart(2, \"0\") +\n  String(nowDate.getMinutes()).padStart(2, \"0\") +\n  String(nowDate.getSeconds()).padStart(2, \"0\");\n\nconst newDateID = Number(formattedDate);\n\nexport default newDateID;"
    ],
    "description": "fgp_newDateID"
  },
  "fgpDate": {
    "scope": "javascript,typescript",
    "prefix": "fgpDate",
    "body": [
      "new Date().toISOString().replace(/[:.\\-TZ]/g, '').slice(2, -3)"
    ],
    "description": "fgpDate"
  }
}