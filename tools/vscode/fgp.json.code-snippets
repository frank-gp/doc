{
  // https://frankgp.com/app/snippet/
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "media query": {
    "scope": "css",
    "prefix": "mq",
    "body": [
      "/* === Desktop... === */\n@media (min-width: 40rem) {\n  body {\n    background-color: peru;\n  }\n}\n/* === Desktop... === */\n\n/* === Mobile... === */\n@media (max-width: 40rem) {\n  body {\n    background-color: crimson;\n  }\n}\n/* === Mobile... === */"
    ],
    "description": "media query"

  },

  "Print to console": {
    "scope": "javascript,typescript",
    "prefix": "cc",
    "body": ["console.log(${1:'TEST'});", "$2"],
    "description": "Log output to console"
  },

  "af1": {
    "scope": "javascript",
    "prefix": "af1",
    "body": ["let ${1:arrowFunc} = () => {", " console.log('test ${1:arrowFunc}')", "}", ""],
    "description": "af1"
  },

  "test": {
    "scope": "javascript",
    "prefix": "test",
    "body": [
      "import 'https://frankgp.com/lib/js/console.js';\n\nconsole.log('TEST');"
    ],
    "description": "test"
  },

  "f1": {
    "scope": "javascript",
    "prefix": "f1",
    "body": ["function ${1:func1}(){", "   ${2:console.log('TEST ${1:func1}')}", "}", "${1:func1}()", ""],
    "description": "f1"
  },

  "dq": {
    "scope": "javascript",
    "prefix": "dq",
    "body": ["document.querySelector('${1:tag}')", ""],
    "description": "dq"
  },

  "qsa": {
    "scope": "javascript",
    "prefix": "qsa",
    "body": ["let ${1:array} = document.querySelectorAll('${2:array}');", "", "${1:array}.forEach((element) => {", "  element.onclick = function () {", "   console.log(element);", "  };", "});"],
    "description": "qsa"
  },
  "wc": {
    "scope": "javascript",
    "prefix": "wc",
    "body": [
      "let html = `<p>web component</p>`",
      "let css = `<style>:host{color: tomato;}</style>`",
"",
      "class ${1:WebComponent} extends HTMLElement {",
          "constructor() {",
              "super();",
              "const shadow = this.attachShadow({ mode: 'open' });",
              "shadow.innerHTML = html + css",
          "}",
      "}",
      "customElements.define('${2:web-component}', ${1:WebComponent});",
    ],
    "description": "wc"
  },

  "icon": {
    "scope": "html, css, javascript",
    "prefix": "icon",
    "body": ["https://frank-gp.github.io/icon/icomoon/style.css"],
    "description": "icon"
  },
  "dark": {
    "scope": "html",
    "prefix": "dark",
    "body": ["<link rel='stylesheet' href='https://frank-gp.github.io/lib/css/dark.css' />"],
    "description": "dark"
  },
  "dev1": {
    "scope": "html",
    "prefix": "dev1",
    "body": [
      "<!DOCTYPE html>\n<html lang='en'>\n  <head>\n    <meta charset='UTF-8' />\n    <meta name='viewport' content='width=device-width, initial-scale=1.0' />\n    <title>Frank GP — Android Developer</title>\n  </head>\n\n  <body>\n    <style>\n\n    </style>\n\n    \n\n    <script>\n\n    </script>\n  </body>\n</html>"
    ],
    "description": "dev1"
  },
  "dev2": {
    "scope": "html",
    "prefix": "dev2",
    "body": [
      "<!DOCTYPE html>\n<html lang='en'>\n  <head>\n    <!-- SEO -->\n    <title>Frank GP — Android Developer</title>\n    <meta name='description' content='Design and Developer Android' />\n    <meta property='og:image' content='https://i0.wp.com/fgp.one/media/fgp-fb-cover.webp' />\n    <script src='https://frankgp.com/component/layout.js' type='module'></script>\n  </head>\n\n  <body>\n    <header-component></header-component>\n\n    <section id='consoleLog'></section>\n    <script src='https://frank-gp.github.io/lib/js/console.js'></script>\n\n    <!-- https://frankgp.com/app/snippet/body.html -->\n    <header></header>\n    <main class='wp-content'>\n      <h1>Developer Mode</h1>\n      <style>\n\n      </style>\n\n      <script>\n\n      </script>\n    </main>\n\n    <footer-component></footer-component>\n  </body>\n</html>"
    ],
    "description": "dev2"
  },
  "favicon": {
    "scope": "html",
    "prefix": "favicon",
    "body": ["<link rel='icon' href='${1:https://i0.wp.com/fgp.one/media/favicon.webp}' sizes='${2:256x256}' />"],
    "description": "favicon"
  },
  "fgp1": {
    "scope": "html",
    "prefix": "fgp1",
    "body": [
      "<!DOCTYPE html>\n<html lang='en'>\n  <head>\n    <!-- CSS -->\n    <link rel='stylesheet' href='https://frankgp.com/icon/icomoon/style.css' />\n    <link rel='stylesheet' href='https://frankgp.com/component/global.css' />\n    <link rel='stylesheet' href='https://frankgp.com/wp-assets/style/wp-content.css' />\n\n    <!-- JS -->\n    <script src='https://frankgp.com/component/head.js'></script>\n    <script src='https://frankgp.com/component/header.js'></script>\n    <script src='https://frankgp.com/component/footer.js'></script>\n\n    <!-- stat -->\n    <!-- <script src='https://frankgp.com/stats/send.js' type='module'></script> -->\n\n    <!-- SEO -->\n    <title>Frank GP — Android Developer</title>\n    <meta name='description' content='Design and Developer Android' />\n    <meta property='og:image' content='https://i0.wp.com/fgp.one/media/fgp-fb-cover.webp' />\n  </head>\n\n  <body>\n    <script src='https://frankgp.com/lib/js/loader.js'></script>\n\n    <header-component></header-component>\n\n    <!-- https://frankgp.com/app/snippet/body.html -->\n    <header>\n      <!-- <img src='https://fgp.one/media/vscode-snippet.webp' alt='vscode-snippet' /> -->\n      <h1>Web Component</h1>\n    </header>\n    <main class='wp-content'>\n      <section class='dark p1'>\n        <style>\n          .linkContainer {\n            max-width: 30rem;\n            margin: auto;\n            /* text-align: left; */\n            display: flex;\n            flex-direction: column;\n            gap: 0.5em;\n          }\n        </style>\n        <section class='linkContainer'></section>\n        <script>\n          // Assuming you have an array of links\n          const array = ['head.js', 'social/github.js',  'social/whatsapp.js', 'social/youtube.js'];\n\n          let base_url = 'https://frankgp.com/component/';\n          array.forEach((item) => {\n            let url = base_url + item;\n            const anchor = `<a href='` + url + `'>` + url + `</a>`;\n            document.querySelector('.linkContainer').insertAdjacentHTML('beforeend', anchor);\n          });\n        </script>\n      </section>\n    </main>\n    <script>\n      var h1Content = document.querySelector('h1').textContent;\n      document.querySelector('title').textContent = h1Content;\n    </script>\n    <fgp-lib>\n      <!-- <script src='https://f-gp.github.io/lib/highlight.js' type='module'></script> -->\n      <!-- <script src='https://frankgp.com/lib/js/clipboard.js' defer></script> -->\n      <!-- <script src='https://frankgp.com/web-component/youtube-embed.js' defer></script> -->\n    </fgp-lib>\n\n    <footer-component></footer-component>\n  </body>\n</html>"
    ],
    "description": "fgp1"
  },
  "fgp2": {
    "scope": "html",
    "prefix": "fgp2",
    "body": [
      "<!DOCTYPE html>\n<html lang='en'>\n  <head>\n    <!-- SEO -->\n    <title>Frank GP — Android Developer</title>\n    <meta name='description' content='Design and Developer Android' />\n    <meta property='og:image' content='https://i0.wp.com/fgp.one/media/fgp-fb-cover.webp' />\n    <script src='https://frankgp.com/component/layout.js' type='module'></script>\n    <!-- <script src='https://frankgp.com/stats/send.js'></script> -->\n  </head>\n\n  <body>\n    <header-component></header-component>\n\n    <!-- https://frankgp.com/app/snippet/body.html -->\n    <header>\n      <!-- <img src='https://fgp.one/media/vscode-snippet.webp' alt='vscode-snippet' /> -->\n      <h1>Web Component</h1>\n    </header>\n    <main class='wp-content'>\n      <section class='dark p1'>\n        <style>\n          .linkContainer {\n            max-width: 30rem;\n            margin: auto;\n            /* text-align: left; */\n            display: flex;\n            flex-direction: column;\n            gap: 0.5em;\n          }\n        </style>\n        <section class='linkContainer'></section>\n        <script>\n          // Assuming you have an array of links\n          const array = [\n            'head.js',\n            'social/github.js',\n            'social/whatsapp.js',\n            'social/youtube.js',\n            // Add more files here\n          ];\n\n          let base_url = 'https://frankgp.com/component/';\n          array.forEach((item) => {\n            let url = base_url + item;\n            const anchor = `<a href='` + url + `'>` + url + `</a>`;\n            document.querySelector('.linkContainer').insertAdjacentHTML('beforeend', anchor);\n          });\n        </script>\n      </section>\n    </main>\n    <fgp-lib>\n      <!-- <script src='https://f-gp.github.io/lib/highlight.js' type='module'></script> -->\n      <!-- <script src='https://frankgp.com/lib/js/clipboard.js' defer></script> -->\n    </fgp-lib>\n\n    <footer-component></footer-component>\n  </body>\n</html>"
    ],
    "description": "fgp2"
  },
  "tt": {
    "scope": "html",
    "prefix": "tt",
    "body": [
      "<!DOCTYPE html>"
    ],
    "description": "tt"
  },
  "fgpexpress1": {
    "scope": "javascript",
    "prefix": "fgpexpress1",
    "body": [
      "import express from 'express';\n\nconst app = express();\n\napp.get('/', (req,res)=> res.send('hello express'))\n\napp.listen(3000);\n\nconsole.log('http://localhost:3000/');"
    ],
    "description": "fgpexpress1"
  },
  "fgpexpress2": {
    "scope": "javascript",
    "prefix": "fgpexpress2",
    "body": [
      "import express from 'express';\nimport cors from 'cors';\n\nconst app = express();\n\napp.use(express.json());\napp.use(cors());\n\napp.get('/', (req, res) => {\n  console.log('request');\n  res.json({ message: 'hello' });\n});\n\napp.listen(3000);\nconsole.log('http://localhost:3000');"
    ],
    "description": "fgpexpress2"
  },
  "fgpexpress0": {
    "scope": "javascript",
    "prefix": "fgpexpress0",
    "body": [
      "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.get('/', (req, res) => {\n  console.log(req.headers);\n  res.send('Hello, World!');\n});\n\napp.listen(port, () => {\n  console.log(`Server listening at http://localhost:\\${port}`);\n});"
    ],
    "description": "fgpexpress0"
  },
  "fgpShortener0": {
    "scope": "javascript",
    "prefix": "fgpShortener0",
    "body": [
      "const express = require('express');\nconst app = express();\n\nconst data = [\n  {\n    url: 'google',\n    redirect: 'https://google.com/',\n    visits: 0,\n  },\n  {\n    url: 'example',\n    redirect: 'https://example.com/',\n    visits: 0,\n  },\n];\n\napp.get('/', (req, res) => {\n  res.json(data);\n});\n\napp.get('/:url', (req, res) => {\n  const requestedUrl = req.params.url;\n  const redirectEntry = data.find((entry) => entry.url === requestedUrl);\n\n  if (redirectEntry) {\n    redirectEntry.visits++;\n    res.redirect(redirectEntry.redirect);\n  } else {\n    res.status(404).json(data);\n  }\n});\n\napp.listen(3000, () => {\n    console.log(`Server is running http://localhost:3000/`);\n  });"
    ],
    "description": "fgpShortener0"
  },
  "fgpShortener1": {
    "scope": "javascript",
    "prefix": "fgpShortener1",
    "body": [
      "const express = require('express');\nconst app = express();\n\nconst data = [\n  {\n    url: 'google',\n    redirect: 'https://google.com/',\n    visits: 0,\n  },\n  {\n    url: 'example',\n    redirect: 'https://example.com/',\n    visits: 0,\n  },\n];\n\napp.get('/', (req, res) => {\n  // Add the current protocol and host to each URL\n  const updatedData = data.map((entry) => ({\n    ...entry,\n    fullUrl: req.protocol + '://' + req.headers.host + '/' + entry.url,\n  }));\n\n  res.json(updatedData);\n});\n\napp.get('/:url', (req, res) => {\n  const requestedUrl = req.params.url;\n  const redirectEntry = data.find((entry) => entry.url === requestedUrl);\n\n  if (redirectEntry) {\n    redirectEntry.visits++;\n    res.redirect(redirectEntry.redirect);\n  } else {\n    res.status(404).json(data);\n  }\n});\n\napp.listen(3000, () => {\n  console.log(`Server is running http://localhost:3000/`);\n});"
    ],
    "description": "fgpShortener1"
  },
  "fgpExpressINFO": {
    "scope": "javascript",
    "prefix": "fgpExpressINFO",
    "body": [
      "const express = require('express');\nconst app = express();\nconst port = 3000;\n\napp.get('/', (req, res) => {\n  // Get the versions of Node.js and npm\n  const nodeVersion = process.version;\n  const npmVersion = require('child_process').execSync('npm -v').toString().trim();\n  const expressVersion = require('express/package').version;\n  const environment = process.env.NODE_ENV || 'development';\n  const osInfo = require('os').platform(); // Operating system information\n\n  // Create a response object\n  const response = {\n    node: nodeVersion,\n    npm: npmVersion,\n    express: expressVersion,\n    environment: environment,\n    os: osInfo,\n    // Add more information as needed\n  };\n\n  // Send the response as JSON\n  res.json(response);\n});\n\napp.listen(port, () => {\n  console.log(`Server listening at http://localhost:${port}`);\n});"
    ],
    "description": "fgpExpressINFO"
  }
}
